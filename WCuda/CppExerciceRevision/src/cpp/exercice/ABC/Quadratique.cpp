#pragma once

#include "Quadratique.h"

using namespace std;

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/
Quadratique::Quadratique(ABCp abc):
    abc(abc), a(abc.a), b(abc.b), c(abc.c)
    {}
Quadratique::Quadratique():
    Quadratique(ABCp(0, 0, 0))
    {}
Quadratique::~Quadratique()
    {
    delete tabX;
    }

int Quadratique::solve()
	    {
    double delta = sqrt( pow(b, 2) + 4*a*c );
    double x1 = (-b + delta) / (2*a);
    double x2 = (-b - delta) / (2*a);


    if(delta < 0) return 0;
    else if(delta == 0)
	{
	tabX = new double[1];
	tabX[1] = x1;
	return 1;
	}
    else
	{
	tabX = new double[2];
	tabX[0] = x1;
	tabX[1] = x2;
	return 2;
	}
    }
    double * Quadratique::getTabX()
	{
	return tabX;
	}

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
